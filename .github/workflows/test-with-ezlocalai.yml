name: Test with ezlocalai
on:
  workflow_call:
    inputs:
      notebook:
        type: string
        description: file to run (ending in .ipynb), can be directory to batch run (without trailing slash)
        default: "tests.ipynb"
      image:
        type: string
        default: joshxt/ezlocalai:main
      port:
        type: string
        default: "8091"
      port-mapping:
        type: string
      additional-python-dependencies:
        type: string
        description: add whatever pip you need here
    secrets:
      api-key:
        description: Optional api-key available as os.getenv('API_KEY') in your notebook

jobs:
  jupyter-test-job:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.dockerBuild.outputs.digest }}
    services:
      service-under-test:
        image: ${{ inputs.image }}
        env:
          DEFAULT_MODEL: "unsloth/Qwen3-1.7B-GGUF"
        ports:
          - ${{ inputs.port-mapping || format('{0}:{1}', inputs.port, inputs.port) }}
        options: >-
          --health-cmd "curl -f http://localhost:${{ inputs.port }}"
          --health-interval 10s
          --health-timeout 500s
          --health-retries 5
          --health-start-period 5m

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 1

      - name: Install jupyter
        run: pip3 install jupyter nbconvert[webpdf]
      - name: Update package lists and install jupyter output generation dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --fix-missing -y pandoc texlive-xetex texlive-fonts-recommended texlive-plain-generic

      - name: Install additional dependencies for notebooks
        if: inputs.additional-python-dependencies
        run: pip3 install requests ${{ inputs.additional-python-dependencies }}

      - name: Set notebook and artifact files
        run: |
          notebook="${{ inputs.notebook }}"
          if ${{ endsWith( inputs.notebook, 'ipynb' ) }} ; then
            echo "notebook-file=${notebook}" >> "$GITHUB_ENV"
            echo "artifact-file=${notebook%.*}.pdf"  >> "$GITHUB_ENV"
          else 
            echo "notebook-file=${notebook}/*.ipynb" >> "$GITHUB_ENV"
            echo "artifact-file=${notebook}/*.pdf"  >> "$GITHUB_ENV"
          fi

      - name: Execute notebook
        env:
          API_KEY: ${{ secrets.api-key }}
        run: python3 -m nbconvert --execute --log-level DEBUG --to pdf  ${{ env.notebook-file }}

      - uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ${{ env.artifact-file }}
